@using FlashCards.Client.Components
@using FlashCards.Client.Models;
@using System.Text.Json;
@implements IDisposable
@inherits LayoutComponentBase
@inject NavigationManager _navManager
@inject IJSRuntime _jsRuntime

<RadzenDialog />
<div id="root">
    <div class="rootContainer">
        @if (_navManager.Uri.Contains("Login") || _navManager.Uri.Contains("Register"))
        {
            <div class="routeContainer">
                @Body
            </div>
        }
        else
        {
            <div class="layoutContainer">
                <div class="layoutHeader">
                    <Header @bind-MenuOpen="MenuOpen" />
                </div>
                <div class=routeContainerFlex>
                    <NavMenu MenuOpen="@MenuOpen" />
                    <div class="routeContainer">
                        @Body
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    bool MenuOpen { get; set; } = true;

    protected override void OnInitialized()
    {
        _navManager.LocationChanged += LocationChanged;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var dimensions = await _jsRuntime.InvokeAsync<WindowDimensions>("getDimensions");
            if (dimensions.Width <= 768)
            {
                MenuOpen = false;
                StateHasChanged();
            }
        }
    }

    async void LocationChanged(object? sender, LocationChangedEventArgs e)
    {
        var dimensions = await _jsRuntime.InvokeAsync<WindowDimensions>("getDimensions");
        if (dimensions.Width <= 768)
        {
            MenuOpen = false;
            StateHasChanged();
        }
    }

    void IDisposable.Dispose()
    {
        _navManager.LocationChanged -= LocationChanged;
    }
}